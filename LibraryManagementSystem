import java.util.ArrayList;
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;
// Book class
class Book 
{
    String code;
    String title;
    String author;
    int capacity;
    String schedule;
    public Book(String code,String title,String author,int capacity,String schedule)
    {
        this.code=code;
        this.title=title;
        this.author=author;
        this.capacity=capacity;
        this.schedule=schedule;
    }
    @Override
    public String toString()
    {
        return "Code: " + code + ", Title: " + title + ", Author: " + author +
                ", Capacity: " + capacity + ", Schedule: " + schedule;
    }
}
// Admin class
class Admin 
{
    ArrayList<Book> bookList=new ArrayList<>();
    // Add a new book
    public void addBook(Book book) {
        bookList.add(book);
        System.out.println("Book added successfully!");
    }
    // Remove a book
    public void removeBook(String code)
    {
        bookList.removeIf(book -> book.code.equals(code));
        System.out.println("Book removed successfully!");
    }
    // Display all books
    public void displayBooks() 
    {
        for(Book book : bookList)
        {
            System.out.println(book);
        }
    }
}
// User class
class User
{
    String id;
    String name;
    ArrayList<Book> registeredBooks=new ArrayList<>();
    public User(String id, String name) 
    {
        this.id=id;
        this.name=name;
    }
    // Register a book
    public void registerBook(Book book)
    {
        registeredBooks.add(book);
        System.out.println("Book registered successfully!");
    }
    // Drop a registered book
    public void dropBook(String code)
    {
        registeredBooks.removeIf(book -> book.code.equals(code));
        System.out.println("Book dropped successfully!");
    }
    // Display registered books
    public void displayRegisteredBooks() 
    {
        for(Book book : registeredBooks)
        {
            System.out.println(book);
        }
    }
}
public class LibraryManagementSystem
{
    public static void main(String[] args) 
    {
        Admin admin=new Admin();
        Map<String, User> users=new HashMap<>();
        Scanner scanner=new Scanner(System.in);
        while(true) 
        {
            System.out.println("1. Admin Login\n2. User Login\n3. Exit");
            int choice=scanner.nextInt();
            switch(choice)
            {
                case 1:
                    // Admin functionalities
                    while(true) 
                    {
                        System.out.println("Admin Menu: \n1. Add Book \n2. Remove Book \n3. Display Books \n4. Logout");
                        int adminChoice=scanner.nextInt();
                        scanner.nextLine(); // Consume newline
                        if(adminChoice==1)
                        {
                            System.out.println("Enter book code:");
                            String code=scanner.nextLine();
                            System.out.println("Enter book title:");
                            String title=scanner.nextLine();
                            System.out.println("Enter author:");
                            String author=scanner.nextLine();
                            System.out.println("Enter capacity:");
                            int capacity=scanner.nextInt();
                            scanner.nextLine(); // Consume newline
                            System.out.println("Enter schedule:");
                            String schedule=scanner.nextLine();
                            admin.addBook(new Book(code, title, author, capacity, schedule));

                        }
                        else if(adminChoice==2)
                        {
                            System.out.println("Enter book code to remove:");
                            String code=scanner.nextLine();
                            admin.removeBook(code);

                        } 
                        else if(adminChoice==3)
                        {
                            admin.displayBooks();

                        }
                        else if(adminChoice==4)
                        {
                            break;
                        }
                    }
                    break;
                case 2:
                    // User functionalities
                    System.out.println("Enter user ID:");
                    String id=scanner.next();
                    scanner.nextLine(); // Consume newline
                    System.out.println("Enter user name:");
                    String name=scanner.nextLine();
                    User user=users.getOrDefault(id, new User(id, name));
                    users.put(id, user);
                    while(true)
                    {
                        System.out.println("User Menu: \n1. Register Book \n2. Drop Book \n3. Display Registered Books \n4. Logout");
                        int userChoice=scanner.nextInt();
                        scanner.nextLine(); // Consume newline
                        if(userChoice==1)
                        {
                            System.out.println("Enter book code to register:");
                            String code=scanner.nextLine();
                            for(Book book : admin.bookList)
                            {
                                if(book.code.equals(code))
                                {
                                    user.registerBook(book);
                                    break;
                                }
                            }
                        } 
                        else if(userChoice==2)
                        {
                            System.out.println("Enter book code to drop:");
                            String code=scanner.nextLine();
                            user.dropBook(code);
                        }
                        else if(userChoice==3)
                        {
                            user.displayRegisteredBooks();
                        }
                        else if(userChoice==4)
                        {
                            break;
                        }
                    }
                    break;
                case 3:
                    System.out.println("Exiting...");
                    scanner.close();
                    return;
                default:
                    System.out.println("Invalid choice. Try again.");
            }
        }
    }
}
